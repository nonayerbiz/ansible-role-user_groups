---
- name: Set initial managed_groups variable
  ansible.builtin.set_fact:
    managed_groups: "{{ managed_common_groups }}"

- name: Check existance of hostname variables
  ansible.builtin.stat:
    path: "{{ role_path }}/vars/hostname={{ inventory_hostname }}.yml"
  register: host_vars
  delegate_to: localhost

- name: Create host based managed_groups variable
  ansible.builtin.set_fact:
    managed_groups: "{{ managed_common_groups + managed_host_groups }}"
  when: host_vars.stat.exists

- name: Check existance of host groups variables
  ansible.builtin.stat:
    path: "{{ role_path }}/vars/hostgroup={{ host_group }}.yml"
  register: hostgroup_vars
  delegate_to: localhost

- name: Create host group based managed_groups variable
  ansible.builtin.set_fact:
    managed_groups: "{{ managed_common_groups + managed_hostgroup_groups }}"
  when:
    - not host_vars.stat.exists
    - hostgroup_vars.stat.exists

- name: Show managed groups
  ansible.builtin.debug:
    msg:
      - "Managed groups: {{ managed_groups }}"

- name: Manage local groups
  ansible.builtin.include_tasks:
    file: manage_local_group.yml
    apply:
      vars:
        - local_group: "{{ item.name }}"
        - local_group_gid: "{{ item.gid }}"
  with_items: "{{ managed_groups }}" # list of hashes
  when: "managed_groups | length > 0"

...
